@model Models.User

@{
    ViewBag.Title = "کاربر جدید";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>کاربر جدید</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PersonnelCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonnelCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonnelCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Organ, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Role", "نقش کاربری", new { @class = "control-label col-md-2" }) @*col-md-offset-2*@
            <div class="col-md-10">
                <select class="form-control valid" id="Role" name="Role" onchange="RolesDropDownChanged()">
                    @foreach (var item in ViewBag.Roles)
                    {
                        <option value="@item.RoleName" @(item.IsSelected ? "selected=selected" : null)>@item.RoleName</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group collegesIds">
            @Html.Label("دسترسی به دانشکده ها", new { @class = "control-label col-md-2" }) @*col-md-offset-2*@
            <span class="col-md-10">
                @foreach (var item in ViewBag.Colleges)
                {
                    <div class="access" style="clear:both;">
                        <label style="cursor: pointer;" class="control-label">
                            <input type="checkbox" id="@item.Id" name="CollegesSelectedOnView" value="@item.Id" checked="@item.IsSelected" class="checkbox-inline" />
                            @item.Title
                        </label>
                    </div>
                }
            </span>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-default col-md-12" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("بازگشت به لیست", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            RolesDropDownChanged();
        })

        function RolesDropDownChanged() {
            var selectedItem = $('#Role').val();

            if (selectedItem == 'مدیر سیستم') {
                var checkboxes = $("form input:checkbox");
                checkboxes.attr("disabled", "disabled");
                checkboxes.parent().css("cursor", "not-allowed").addClass("disabled");
            }
            else {
                var checkboxes = $("form input:checkbox");
                checkboxes.removeAttr("disabled");
                checkboxes.parent().css("cursor", "pointer").removeClass("disabled");
            }


            var collegesIdsDiv = document.getElementsByClassName("collegesIds")[0],
                html = `<div class=\"form-group\">
                    <label class=\"control-label col-md-2\" for=\"WatchHours\">تعداد ساعات مراقبت</label>
                    <div class=\"col-md-10\">
                        <input class=\"form-control text-box single-line valid\" data-val=\"true\" data-val-number=\"The field تعداد ساعات مراقبت must be a number.\" data-val-range=\"ساعات مراقبت باید عددی بین 0 تا 255 باشد!\" data-val-range-max=\"255\" data-val-range-min=\"0\" data-val-required=\"تعداد ساعات مراقبت را تعیین کنید.\" id=\"WatchHours\" name=\"WatchHours\" type=\"number\" value=\"0\" aria-describedby=\"WatchHours-error\" aria-invalid=\"false\">
                        <span class=\"text-danger field-validation-valid\" data-valmsg-for=\"WatchHours\" data-valmsg-replace=\"true\"></span>
                    </div>
                </div>`;

            if (selectedItem == 'مراقب') {
                // Internet Explorer, Opera, Google Chrome and Safari
                if (collegesIdsDiv.insertAdjacentHTML)
                    collegesIdsDiv.insertAdjacentHTML("beforeBegin", html);
                else {
                    var range = document.createRange();
                    var frag = range.createContextualFragment(html);
                    collegesIdsDiv.parentNode.insertBefore(frag, collegesIdsDiv);
                }
            }
            else {
                var watchHoursElement = document.getElementById("WatchHours");
                watchHoursElement = watchHoursElement.parentNode.parentNode;
                watchHoursElement.remove();
            }
        }
    </script>
}
