@model Models.User

@{
    ViewBag.Title = "ویرایش کاربر";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ویرایش کاربر</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PersonnelCode)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Organ, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Organ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Role", "نقش کاربری", new { @class = "control-label col-md-2" }) @*col-md-offset-2*@
            <div class="col-md-10">
                <select class="form-control valid" id="Role" name="Role" onchange="RolesDropDownChanged()">
                    @foreach (var item in ViewBag.Roles)
                    {
                        <option value="@item.RoleName" @(item.IsSelected ? "selected=selected" : null)>@item.RoleName</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("دسترسی به دانشکده ها", new { @class = "control-label col-md-2" }) @*col-md-offset-2*@
            <span class="col-md-10">
                @foreach (var item in ViewBag.Colleges)
                {
                    <div class="access" style="clear:both;">
                        <label style="cursor: pointer;" class="control-label">
                            <input type="checkbox" id="@item.Id" name="CollegesSelectedOnView" value="@item.Id" checked="@item.IsSelected" class="checkbox-inline" onchange="ToggleSelectDisable(@item.Id)" />
                            @item.Title
                        </label>
                    </div>
                }
            </span>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت تغییرات" class="btn btn-default col-md-12" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("بازگشت به لیست", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            RolesDropDownChanged();
        })

        function RolesDropDownChanged() {
            var selectedItem = $('#Role').val();

            if (selectedItem == 'مدیر سیستم') {
                var checkboxes = $("form input:checkbox");
                checkboxes.attr("disabled", "disabled");
                checkboxes.parent().css("cursor", "not-allowed").addClass("disabled");
            }
            else {
                var checkboxes = $("form input:checkbox");
                checkboxes.removeAttr("disabled");
                checkboxes.parent().css("cursor", "pointer").removeClass("disabled");
            }
        }
    </script>
}
